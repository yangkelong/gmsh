// -----------------------------------------------------------------------------
//
//  Gmsh GEO tutorial 13
//
//  Remeshing an STL file without an underlying CAD model
//  在没有底层 CAD 模型的情况下重网格化 STL 文件
// -----------------------------------------------------------------------------

// Let's merge an STL mesh that we would like to remesh.
// 导入 STL 网格
Merge "t13_data.stl";

// We first classify ("color") the surfaces by splitting the original surface
// along sharp geometrical features. This will create new discrete surfaces,
// curves and points.
// 首先通过沿着尖锐的几何特征分割原始表面来对表面进行分类（“着色”）。这将创建新的离散表面、曲线和点。
DefineConstant[
  // Angle between two triangles above which an edge is considered as sharp
  // 两个三角形之间的角度，超过此角度的边被视为尖锐
  angle = {40, Min 20, Max 120, Step 1, Name "Parameters/Angle for surface detection"},
  // For complex geometries, patches can be too complex, too elongated or too
  // large to be parametrized; setting the following option will force the
  // creation of patches that are amenable to reparametrization:
   // 对于复杂的几何体，patches可能过于复杂、过于拉长或过大，无法进行参数化；设置以下选项将强制创建适合重新参数化的patches：
  forceParametrizablePatches = {0, Choices{0,1}, Name "Parameters/Create surfaces guaranteed to be parametrizable"},
  // For open surfaces include the boundary edges in the classification process:
  // 对于开放表面，在分类过程中包含边界边：
  includeBoundary = 1,
  // Force curves to be split on given angle:
  // 强制在给定角度上分割曲线：
  curveAngle = 180
];
ClassifySurfaces{angle * Pi/180, includeBoundary, forceParametrizablePatches,
                 curveAngle * Pi / 180};

// Create a geometry for all the discrete curves and surfaces in the mesh, by
// computing a parametrization for each one
// 通过为每个离散曲线和表面计算参数化，为网格中的所有离散曲线和表面创建几何体
CreateGeometry;

// In batch mode the two steps above can be performed with `gmsh t13.stl
// -reparam 40', which will save `t13.msh' containing the parametrizations, and
// which can thus subsequently be remeshed.
// 在批处理模式下，上述两个步骤可以通过 `gmsh t13.stl -reparam 40' 执行，这将保存包含参数化的 `t13.msh'，因此可以随后进行重网格化。

// Note that if a CAD model (e.g. as a STEP file, see `t20.geo') is available
// instead of an STL mesh, it is usually better to use that CAD model instead of
// the geometry created by reparametrizing the mesh. Indeed, CAD geometries will
// in general be more accurate, with smoother parametrizations, and will lead to
// more efficient and higher quality meshing. Discrete surface remeshing in Gmsh
// is optimized to handle dense STL meshes coming from e.g. imaging systems
// where no CAD is available; it is less well suited for the poor quality STL
// triangulations (optimized for size, with e.g. very elongated triangles) that
// are usually generated by CAD tools for e.g. 3D printing.
// 注意，如果可用 CAD 模型（例如作为 STEP 文件，见 `t20.geo'），通常最好使用该 CAD 模型
// 而不是通过重参数化网格创建的几何体。实际上，CAD 几何体通常更准确，参数化更平滑，并将
// 导致更有效和更高质量的网格化。Gmsh 中的离散表面重网格化优化处理来自例如成像系统的密集 STL 网格，
// 其中没有 CAD 可用；它不太适合 CAD 工具通常为 3D 打印生成的劣质 STL 三角剖分（针对大小优化，例如非常拉长的三角形）。

// Create a volume as usual
Surface Loop(1) = Surface{:};
Volume(1) = {1};

// We specify element sizes imposed by a size field, just because we can :-)
funny = DefineNumber[0, Choices{0, 1}, Name "Parameters/Apply funny mesh size field?" ];

Field[1] = MathEval;
If(funny)
  Field[1].F = "2*Sin((x+y)/5) + 3";
Else
  Field[1].F = "4";
EndIf
Background Field = 1;
